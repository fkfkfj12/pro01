package kr.go.chuncheon.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;




import kr.go.chuncheon.dto.UserDTO;

public class UserDAO {
	private Connection con = null;
	private PreparedStatement pstmt = null;
	private ResultSet rs = null;
	String sql = "";
	
	public ArrayList<UserDTO> getUserList() {
		ArrayList<UserDTO> userList = new ArrayList<UserDTO>();
		try {
			con = Maria.getConnection();
			pstmt = con.prepareStatement(Maria.USER_SELECT_ALL);
			rs = pstmt.executeQuery();
			while(rs.next()){
				UserDTO dto2 = new UserDTO();
				dto2.setId(rs.getString("id"));
				dto2.setPw(rs.getString("pw"));
				dto2.setName(rs.getString("name"));
				dto2.setBirth(rs.getString("birth"));
				dto2.setEmail(rs.getString("email"));
				dto2.setTel(rs.getString("tel"));
				dto2.setAddress(rs.getString("address"));
				userList.add(dto2);
			}
		} catch(ClassNotFoundException e){
			System.out.println("드라이버 로딩 실패");
			e.printStackTrace();
		} catch(SQLException e){
			System.out.println("SQL 구문이 처리되지 못했습니다.");
			e.printStackTrace();
		} catch(Exception e){
			System.out.println("잘못된 연산 및 요청으로 인해 목록을 불러오지 못했습니다.");
		} finally {
			Maria.close(rs, pstmt, con);
		}
		return userList;
	}
	
	
	
	public int join(UserDTO dto2){
		int cnt = 0;
		try {
			con = Maria.getConnection();
			//글 추가
			pstmt = con.prepareStatement(Maria.USER_JOIN);
			pstmt.setString(1, dto2.getId());
			pstmt.setString(2, dto2.getPw());
			pstmt.setString(3, dto2.getName());
			pstmt.setString(4, dto2.getBirth());
			pstmt.setString(5, dto2.getEmail());
			pstmt.setString(6, dto2.getTel());
			pstmt.setString(7, dto2.getAddress());
			cnt = pstmt.executeUpdate();
		} catch(ClassNotFoundException e){
			System.out.println("드라이버 로딩 실패");
			e.printStackTrace();
		} catch(SQLException e){
			System.out.println("SQL 구문이 처리되지 못했습니다.");
			e.printStackTrace();
		} catch(Exception e){
			System.out.println("잘못된 연산 및 요청으로 인해 목록을 불러오지 못했습니다.");
		} finally {
			Maria.close(pstmt, con);
		}
		return cnt;
	}

	public int delUser(String id) {
		int cnt = 0;
		try {
			con = Maria.getConnection();
			//글 추가
			pstmt = con.prepareStatement(Maria.USER_DELEDTE);
			pstmt.setString(1, id);
			cnt = pstmt.executeUpdate();
		} catch(ClassNotFoundException e){
			System.out.println("드라이버 로딩 실패");
			e.printStackTrace();
		} catch(SQLException e){
			System.out.println("SQL 구문이 처리되지 못했습니다.");
			e.printStackTrace();
		} catch(Exception e){
			System.out.println("잘못된 연산 및 요청으로 인해 목록을 불러오지 못했습니다.");
		} finally {
			Maria.close(pstmt, con);
		}
		return cnt;
	}

	public int modifyUser(UserDTO dto2) {
		int cnt = 0;
		try {
			con = Maria.getConnection();
			//글 추가
			pstmt = con.prepareStatement(Maria.USER_UPDATE);
			pstmt.setString(1, dto2.getPw());
			pstmt.setString(2, dto2.getName());
			pstmt.setString(3, dto2.getBirth());
			pstmt.setString(4, dto2.getEmail());
			pstmt.setString(5, dto2.getTel());
			pstmt.setString(6, dto2.getAddress());
			pstmt.setString(7, dto2.getId());
			
			cnt = pstmt.executeUpdate();
		} catch(ClassNotFoundException e){
			System.out.println("드라이버 로딩 실패");
			e.printStackTrace();
		} catch(SQLException e){
			System.out.println("SQL 구문이 처리되지 못했습니다.");
			e.printStackTrace();
		} catch(Exception e){
			System.out.println("잘못된 연산 및 요청으로 인해 목록을 불러오지 못했습니다.");
		} finally {
			Maria.close(pstmt, con);
		}
		return cnt;
	}
}